#1: RESOLVED
object counting for member accessable entities is bugged.
class node 
    val = none
    next = none

    fun _init (self, val, next)
        self.val = val
        self.next = next
    
    fun add (self, val)
        if self.next != none
            self.next.add (val)
        else
            self.next = node (val, none)
    
    fun print (self)
        putln (self.val)
        if self.next != none
            self.next.print ()
    
    fun _kill (self)
        putln ('Killing')

a = node (1, none)
a.add (2)
a.add (3)
-----
Remarks: Kill function is not called at the end of program

#2: RESOLVED
Had some problem where accessing obj.next.next would result
in a permanent increment in obj's ref_count

class Node1
    v = none
    next = none

    fun _init (this, a)
        this.v = a
        this.next = none

    fun printv (this)
        putln (this.v)

class Node2
    v = none
    next = none

    fun _init (this, a)
        this.v = a
        this.next = none

    fun printv (this)
        putln (this.v)

class Node3
    v = none
    next = none

    fun _init (this, a)
        this.v = a
        this.next = none

    fun printv (this)
        putln (this.v)

obj = Node1 (1)
prc(obj)
obj.next = Node2 (2)
prc(obj)
obj.next.next = Node3 (3)
prc(obj)